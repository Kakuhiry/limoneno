name: Deploy to ECR - Backend
on:
  push:
    branches: [ ci/cd-testing ]
    # paths:
    #   - "backend/src/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # bump:
  #   name: Bump version
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v2
  
  #   - name: App versioning
  #     working-directory: backend
  #     run: |
  #       npm config set git-tag-version false
  #       npm version patch

  #   - name: Configure git
  #     run: |
  #       git config user.name "Github-Actions"
  #       git config user.email "<>"

  #   - name: Get version
  #     id: version
  #     uses: notiz-dev/github-action-json-property@release
  #     with:
  #       path: "backend/package.json"
  #       prop_path: "version"

  #   - name: Commit new version
  #     working-directory: backend
  #     run: |
  #       git add package.json
  #       git commit -m "release(backend): ${{ steps.version.outputs.prop }}"
  #       git push
      
  build:
    name: Build & Push Image 
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      working-directory: backend
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: app
        IMAGE_TAG: "0.1.0"
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG